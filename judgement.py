# -*- coding: utf-8 -*-
"""judgement.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QE3CGmxyX-GBcLyZlT28tmGOZw2XHS_r
"""


from bs4 import BeautifulSoup as bs
import json
import numpy as np
import pandas as pd
import requests
from Law_Classifier import runLoki

def lawsuitUrlGrabber_guilty(url):
  r = requests.get(url.format(1))
  page = bs(r.text, "html.parser")
  pageNum = int(page.find(id = 'hlLast', href = True)['href'].split("page=",1)[1])
  for i in range(1, pageNum+1):
    r = requests.get(url.format(i))
    law = bs(r.text, "html.parser")
    for i in law.find_all('a', href = True):
      if 'data' in i['href']:
        link = "https://law.judicial.gov.tw/FJUD/"+i['href']
        if link in urlLIST_1:
          continue
        else:
          urlLIST_1.append(link)
def lawsuitUrlGrabber_notguilty(url):
  if url[-1] != 'n':
    r = requests.get(url)
    law = bs(r.text, "html.parser")
    for i in law.find_all('a', href = True):
      if 'data' in i['href']:
        link = "https://law.judicial.gov.tw/FJUD/"+i['href']
        if link in urlLIST_2:
          continue
        else:
          urlLIST_2.append(link)
  else:
    r = requests.get(url.format(1))
    page = bs(r.text, "html.parser")
    pageNum = int(page.find(id = 'hlLast', href = True)['href'].split("page=",1)[1])
    for i in range(1, pageNum+1):
      r = requests.get(url.format(i))
      law = bs(r.text, "html.parser")
      for i in law.find_all('a', href = True):
        if 'data' in i['href']:
          link = "https://law.judicial.gov.tw/FJUD/"+i['href']
          if link in urlLIST_2:
            continue
          else:
            urlLIST_2.append(link)
def data_cleaner(string):
    textLIST = [x.replace("\r","").replace("\n","").replace("\t","").replace("\u3000","").replace("\xa0", "").replace(" ", "") for x in string]
    return "".join(textLIST)
"""**Note:**
1. 近十年判決書會存在htmlcontent標籤
2. 十年以前的判決書會存在text-pre text-pre-in標籤
"""
def judgementGrabber_guilty(judgeUrl):
  plaintiffLIST = ['甲女', 'A女', 'Ａ女']
  judgementDICT = {"ID": "",
                   "guilty": 1, 
                   "date": "", 
                   "charge": "", 
                   "sentence_1": "",
                   "fact_1": "", 
                   "reason_1": "", 
                   "sentence_2": "",
                   "fact_2": "", 
                   "reason_2": "", 
                   "url": judgeUrl}
  r = requests.get(judgeUrl)
  lawsuit = bs(r.text, "html.parser")
  # 判決案號
  judgementDICT['ID'] = data_cleaner(lawsuit.find("title").text)
  # 日期
  judgementDICT['date'] = data_cleaner(lawsuit.find_all(class_ = 'col-td')[1].text)
  # 罪名
  judgementDICT['charge'] = data_cleaner(lawsuit.find_all(class_ = 'col-td')[2].text)
  # 尋找在text-pre text-pre-in標籤裡的判決書
  judgement = lawsuit.find(class_ = "text-pre text-pre-in").text 
  # 原告
  try:
    plaintiff_1 = [ele for ele in plaintiffLIST if (ele in judgement)]
    judgementDICT['plaintiff_1'] = plaintiff_1[0]
  except:
    judgementDICT['plaintiff_1'] = ""
  # 主文
  if '犯罪' == data_cleaner(judgement).partition("：主文")[2].partition("事實") [0][-2:]:
    sentence = data_cleaner(judgement).partition("主文")[2].partition("事實")[0][:-3]
    judgementDICT['sentence_1'] = sentence
    resultDICT = runLoki([sentence], ['isCriminal'])
    try:
      # 被告
      judgementDICT['defendent'] = resultDICT['criminal']
    except:
      pass
    # 被害人特點：精神障礙/心智缺陷/身體障礙/未滿十四歲/少年
    try:
      judgementDICT['victim_feature'] = resultDICT['victim']
    except:
      pass
    # 特殊條件：攜帶兇器/侵入住宅/對被害人施以凌虐
    try:
      judgementDICT['addition'] = resultDICT['addition']
    except:
      pass
    # 未成年
    try:
      judgementDICT['under_18'] = resultDICT['under_18']
    except:
      pass
    try:
      # 是否未遂
      resultDICT['attempted'] = resultDICT['attempted']
    except:
      pass
  else:
    sentence = data_cleaner(judgement).partition("：主文")[2].partition("事實")[0]
    judgementDICT['sentence_1'] = sentence
    resultDICT = runLoki([sentence], ['isCriminal'])
    try:
      # 被告
      judgementDICT['defendent'] = resultDICT['criminal']
    except:
      pass
    # 被害人特點：精神障礙/心智缺陷/身體障礙/未滿十四歲/少年
    try:
      judgementDICT['victim_feature'] = resultDICT['victim']
    except:
      pass
    # 特殊條件：攜帶兇器/侵入住宅/對被害人施以凌虐
    try:
      judgementDICT['addition'] = resultDICT['addition']
    except:
      pass
    # 未成年
    try:
      judgementDICT['under_18'] = resultDICT['under_18']
    except:
      pass
    try:
      # 是否未遂
      judgementDICT['attempted'] = resultDICT['attempted']
    except:
      pass
    # 尋找在text-pre text-pre-in標籤裡的判決書
  # 事實
  judgementDICT['fact_1'] = data_cleaner(judgement).partition("事實")[2].partition("理由")[0]
  # 理由
  judgementDICT['reason_1'] = data_cleaner(judgement).partition("理由")[2].partition("論罪科刑：")[0]
  judgementDICT['crime&sentence_1'] = data_cleaner(judgement).partition("三、論罪科刑")[2].partition("中華民國")[0]
  # 尋找在htmlcontent標籤裡的判決書 以上編號為1 以下編號為2
  judgement = lawsuit.find(class_ = "htmlcontent").text 
  try:
    plaintiff_2 = [ele for ele in plaintiffLIST if (ele in judgement)]
    judgementDICT['plaintiff_2'] = plaintiff_2[0]
  except:
    judgementDICT['plaintiff_2'] = ""
  # 主文
  if '犯罪' == data_cleaner(judgement).partition("主文")[2].partition("事實") [0][-2:]:
    sentence = data_cleaner(judgement).partition("主文")[2].partition("事實")[0][:-3]
    judgementDICT['sentence_2'] = sentence
    resultDICT = runLoki([sentence], ['isCriminal'])
    try:
      # 被告
      judgementDICT['defendent'] = resultDICT['criminal']
    except:
      pass
    try:
      judgementDICT['victim_feature'] = resultDICT['victim']
    except:
      pass
    # 特殊條件：攜帶兇器/侵入住宅/對被害人施以凌虐
    try:
      judgementDICT['addition'] = resultDICT['addition']
    except:passjudgementDICT['addition'] = ''
    # 未成年
    try:
      judgementDICT['under_18'] = resultDICT['under_18']
    except:
      pass
  # 尋找在text-pre text-pre-in標籤裡的判決書
  else:
    sentence = data_cleaner(judgement).partition("主文")[2].partition("事實")[0]
    judgementDICT['sentence_2'] = sentence
    resultDICT = runLoki([sentence], ['isCriminal'])
    try:
      # 被告
      judgementDICT['defendent'] = resultDICT['criminal']
    except:
      pass
    # 被害人特點：精神障礙/心智缺陷/身體障礙/未滿十四歲/少年
    try:
      judgementDICT['victim_feature'] = resultDICT['victim']
    except:
      pass
    # 特殊條件：攜帶兇器/侵入住宅/對被害人施以凌虐
    try:
      judgementDICT['addition'] = resultDICT['addition']
    except:
      pass
    # 未成年
    try:
      judgementDICT['under_18'] = resultDICT['under_18']
    except:
      pass
  # 事實
  judgementDICT['fact_2'] = data_cleaner(judgement).partition("事實")[2].partition("理由")[0]
  # 理由 
  judgementDICT['reason_2'] = data_cleaner(judgement).partition("主文")[2].partition("事實") [2]
  judgementDICT['crime&sentence_2'] = data_cleaner(judgement).partition("三、論罪科刑")[2].partition("中華民國")[0]
  return judgementDICT
def judgementGrabber_notguilty(judgeUrl):
  plaintiffLIST = ['甲女', 'A女', 'Ａ女']
  judgementDICT = {"ID": "",
                   "guilty": 0, 
                   "date": "", 
                   "charge": "", 
                   "sentence_1": "",
                   "fact_1": "", 
                   "reason_1": "", 
                   "sentence_2": "",
                   "fact_2": "", 
                   "reason_2": "", 
                   "url": judgeUrl}
  r = requests.get(judgeUrl)
  lawsuit = bs(r.text, "html.parser")
  # 判決案號
  judgementDICT['ID'] = data_cleaner(lawsuit.find("title").text)
  # 日期
  judgementDICT['date'] = data_cleaner(lawsuit.find_all(class_ = 'col-td')[1].text)
  # 罪名
  judgementDICT['charge'] = data_cleaner(lawsuit.find_all(class_ = 'col-td')[2].text)
  # 尋找在text-pre text-pre-in標籤裡的判決書
  judgement = lawsuit.find(class_ = "text-pre text-pre-in").text 
  # 原告
  try:
    plaintiff_1 = [ele for ele in plaintiffLIST if (ele in judgement)]
    judgementDICT['plaintiff_1'] = plaintiff_1[0]
  except:
    judgementDICT['plaintiff_1'] = ""
  # 主文
  if '犯罪' == data_cleaner(judgement).partition("：主文")[2].partition("事實") [0][-2:]:
    sentence = data_cleaner(judgement).partition("主文")[2].partition("事實")[0][:-3]
    judgementDICT['sentence_1'] = sentence
    resultDICT = runLoki([sentence], ['isCriminal'])
    try:
      # 被告
      judgementDICT['defendent'] = resultDICT['criminal']
    except:
      pass
    # 被害人特點：精神障礙/心智缺陷/身體障礙/未滿十四歲/少年
    try:
      judgementDICT['victim_feature'] = resultDICT['victim']
    except:
      pass
    # 特殊條件：攜帶兇器/侵入住宅/對被害人施以凌虐
    try:
      judgementDICT['addition'] = resultDICT['addition']
    except:
      pass
    # 未成年
    try:
      judgementDICT['under_18'] = resultDICT['under_18']
    except:
      pass
    try:
      # 是否未遂
      resultDICT['attempted'] = resultDICT['attempted']
    except:
      pass
  else:
    sentence = data_cleaner(judgement).partition("：主文")[2].partition("事實")[0]
    judgementDICT['sentence_1'] = sentence
    resultDICT = runLoki([sentence], ['isCriminal'])
    try:
      # 被告
      judgementDICT['defendent'] = resultDICT['criminal']
    except:
      pass
    # 被害人特點：精神障礙/心智缺陷/身體障礙/未滿十四歲/少年
    try:
      judgementDICT['victim_feature'] = resultDICT['victim']
    except:
      pass
    # 特殊條件：攜帶兇器/侵入住宅/對被害人施以凌虐
    try:
      judgementDICT['addition'] = resultDICT['addition']
    except:
      pass
    # 未成年
    try:
      judgementDICT['under_18'] = resultDICT['under_18']
    except:
      pass
    try:
      # 是否未遂
      judgementDICT['attempted'] = resultDICT['attempted']
    except:
      pass
    # 尋找在text-pre text-pre-in標籤裡的判決書
  # 事實
  judgementDICT['fact_1'] = data_cleaner(judgement).partition("事實")[2].partition("理由")[0]
  # 理由
  judgementDICT['reason_1'] = data_cleaner(judgement).partition("理由")[2].partition("論罪科刑：")[0]
  judgementDICT['crime&sentence_1'] = data_cleaner(judgement).partition("三、論罪科刑")[2].partition("中華民國")[0]
  # 尋找在htmlcontent標籤裡的判決書 以上編號為1 以下編號為2
  judgement = lawsuit.find(class_ = "htmlcontent").text 
  try:
    plaintiff_2 = [ele for ele in plaintiffLIST if (ele in judgement)]
    judgementDICT['plaintiff_2'] = plaintiff_2[0]
  except:
    judgementDICT['plaintiff_2'] = ""
  # 主文
  if '犯罪' == data_cleaner(judgement).partition("主文")[2].partition("事實") [0][-2:]:
    sentence = data_cleaner(judgement).partition("主文")[2].partition("事實")[0][:-3]
    judgementDICT['sentence_2'] = sentence
    resultDICT = runLoki([sentence], ['isCriminal'])
    try:
      # 被告
      judgementDICT['defendent'] = resultDICT['criminal']
    except:
      pass
    try:
      judgementDICT['victim_feature'] = resultDICT['victim']
    except:
      pass
    # 特殊條件：攜帶兇器/侵入住宅/對被害人施以凌虐
    try:
      judgementDICT['addition'] = resultDICT['addition']
    except:passjudgementDICT['addition'] = ''
    # 未成年
    try:
      judgementDICT['under_18'] = resultDICT['under_18']
    except:
      pass
  # 尋找在text-pre text-pre-in標籤裡的判決書
  else:
    sentence = data_cleaner(judgement).partition("主文")[2].partition("事實")[0]
    judgementDICT['sentence_2'] = sentence
    resultDICT = runLoki([sentence], ['isCriminal'])
    try:
      # 被告
      judgementDICT['defendent'] = resultDICT['criminal']
    except:
      pass
    # 被害人特點：精神障礙/心智缺陷/身體障礙/未滿十四歲/少年
    try:
      judgementDICT['victim_feature'] = resultDICT['victim']
    except:
      pass
    # 特殊條件：攜帶兇器/侵入住宅/對被害人施以凌虐
    try:
      judgementDICT['addition'] = resultDICT['addition']
    except:
      pass
    # 未成年
    try:
      judgementDICT['under_18'] = resultDICT['under_18']
    except:
      pass
  # 事實
  judgementDICT['fact_2'] = data_cleaner(judgement).partition("事實")[2].partition("理由")[0]
  # 理由 
  judgementDICT['reason_2'] = data_cleaner(judgement).partition("主文")[2].partition("事實") [2]
  judgementDICT['crime&sentence_2'] = data_cleaner(judgement).partition("三、論罪科刑")[2].partition("中華民國")[0]
  return judgementDICT
"""
for i in judgementLIST:
  print(i)
for i in judgementLIST:
  if '男女朋友' in i['judgement_1']:
    txt = i['judgement_1'].split("，")
    # foo = somevalue
    previous = next_ = None
    l = len(txt)
    for index, obj in enumerate(txt):
      if '男女朋友' in obj:
        print("判決書裡有男女朋友的判決編號:", judgementLIST.index(i))
        print("有男女朋友的句子，第{}句".format(index))
        print("Guilty:", i['guilty'])
        print("url:", i['url'])
        print("判決結果:", i['sentence_1'])
        if index > 0:
            pp = txt[index - 2]
            previous = txt[index - 1]
            print("有男女朋友的句子的上上一句:", pp)
            print("有男女朋友的句子的上一句:", previous)
        print("有男女朋友的句子:", txt[index])
        if index < (l - 1):
            nn = txt[index + 2]
            next_ = txt[index + 1]
            print("有男女朋友的句子的下一句:", next_)
            print("有男女朋友的句子的下下一句", nn)
        print("----------------------")
"""

if __name__ == '__main__':
  url_1 = "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=bbde96d11f26de49e018a79c898151c6&sort=DS&page={}&ot=in" #1 guilty 100/01/01~105/12/31
  url_2 = "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=7b807db4e6d042f04f917a6f070028fb&sort=DS&page={}&ot=in" #1 guilty 106/01/01~110/5/13
  url_3 = "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=980ef39c3a6772786a42df5c76e79a36&sort=DS&page={}&ot=in" #2 guilty 100/01/01~103/12/31
  url_4 = "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=f403fe9cce4affed23dfba6ed1629ba2&sort=DS&page={}&ot=in" #2 guilty 104/01/01~110/05/13
  url_5 = "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?ty=JUDBOOK&q=799cc1a3bbcdaad69acb2af5104d8518" #3 not guilty 100/01/01~110/05/13
  url_6 = "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=59479c327bc46bebb3dc194975d41f31&sort=DS&page={}&ot=in" #4 not guilty 100/01/01~110/05/13 
  url_7 = "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=73cfccdf45909942061637070af448d5&sort=DS&page={}&ot=in" #5 guilty 100/01/01~110/05/13 
  url_8 = "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=325c0f4ba743be3a4da73481c57eb7b6&sort=DS&page={}&ot=in" #6 guilty 100/01/01~110/05/13
  url_9 = "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?ty=JUDBOOK&q=6e595212546038044de5beb70c1e90ed" #7 not guilty 100/01/01~110/05/13
  guiltyLIST = ["https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=bbde96d11f26de49e018a79c898151c6&sort=DS&page={}&ot=in", "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=7b807db4e6d042f04f917a6f070028fb&sort=DS&page={}&ot=in", "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=980ef39c3a6772786a42df5c76e79a36&sort=DS&page={}&ot=in", "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=f403fe9cce4affed23dfba6ed1629ba2&sort=DS&page={}&ot=in", "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=73cfccdf45909942061637070af448d5&sort=DS&page={}&ot=in", "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=325c0f4ba743be3a4da73481c57eb7b6&sort=DS&page={}&ot=in"]
  notguiltyLIST = ["https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?ty=JUDBOOK&q=799cc1a3bbcdaad69acb2af5104d8518", "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?q=59479c327bc46bebb3dc194975d41f31&sort=DS&page={}&ot=in", "https://law.judicial.gov.tw/FJUD/qryresultlst.aspx?ty=JUDBOOK&q=6e595212546038044de5beb70c1e90ed"]
  urlLIST_1 = [] #guilty
  urlLIST_2 = [] #not guilty
  print("-------爬取連結開始-------")
  for i in guiltyLIST:
    lawsuitUrlGrabber_guilty(i)
  for j in notguiltyLIST:
    lawsuitUrlGrabber_notguilty(j)
  print("-------爬取連結完畢-------")
  urlLIST_3 = ["https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TNHM,109%2c%e4%be%b5%e4%b8%8a%e8%a8%b4%2c916%2c20210120%2c3", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TCHM,109%2c%e4%be%b5%e4%b8%8a%e8%a8%b4%2c14%2c20201217%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TCHM,109%2c%e4%be%b5%e4%b8%8a%e8%a8%b4%2c43%2c20200825%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TNDM,108%2c%e4%be%b5%e8%a8%b4%2c72%2c20200806%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TCDM,108%2c%e4%be%b5%e8%a8%b4%2c35%2c20200206%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TCDM,107%2c%e4%be%b5%e8%a8%b4%2c85%2c20200109%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=MLDM,108%2c%e4%be%b5%e8%a8%b4%2c9%2c20190912%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TCHM,108%2c%e4%be%b5%e4%b8%8a%e8%a8%b4%2c51%2c20190618%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=CTDM,107%2c%e4%be%b5%e8%a8%b4%2c1%2c20181016%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=NTDM,106%2c%e4%be%b5%e8%a8%b4%2c6%2c20180509%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=KSHM,106%2c%e4%be%b5%e4%b8%8a%e8%a8%b4%2c88%2c20171226%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TCDM,105%2c%e4%be%b5%e8%a8%b4%2c153%2c20170524%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TCHM,103%2c%e4%be%b5%e4%b8%8a%e8%a8%b4%2c152%2c20150429%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=KLDM,103%2c%e4%be%b5%e8%a8%b4%2c36%2c20150331%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TPHM,103%2c%e4%be%b5%e4%b8%8a%e8%a8%b4%2c211%2c20140718%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TPHM,102%2c%e8%bb%8d%e4%b8%8a%e8%a8%b4%2c21%2c20131031%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=PCDM,101%2c%e4%be%b5%e8%a8%b4%e7%b7%9d%2c2%2c20130510%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=KSDM,101%2c%e4%be%b5%e8%a8%b4%2c70%2c20130501%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=MLDM,101%2c%e4%be%b5%e8%a8%b4%2c16%2c20130131%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=KSDM,101%2c%e4%be%b5%e8%a8%b4%2c61%2c20121204%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TPDM,101%2c%e4%be%b5%e8%a8%b4%2c2%2c20121105%2c4", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TPHM,101%2c%e4%be%b5%e4%b8%8a%e8%a8%b4%2c178%2c20120726%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=ILDM,100%2c%e4%be%b5%e8%a8%b4%2c14%2c20111005%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=SCDM,99%2c%e8%a8%b4%2c234%2c20110630%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TCDM,99%2c%e8%a8%b4%2c3596%2c20110301%2c1", "https://law.judicial.gov.tw/FJUD/data.aspx?ty=JD&id=TPHM,107%2c%e4%be%b5%e4%b8%8a%e6%9b%b4%e4%b8%80%2c3%2c20200617%2c1"]  #妨害性自主等
  urlLIST_2 = urlLIST_2 + urlLIST_3
  print(len(urlLIST_1), len(urlLIST_2))
  print("-------開始爬取連結內容-------")
  judgementLIST = []
  urlLIST = urlLIST_1+urlLIST_2
  urlLen = len(urlLIST)
  for i in urlLIST_1:
    urlIndex = urlLIST.index(i)
    if urlIndex == int(urlLen*0.25):
      print("已爬取25%的網頁")
    if urlIndex == int(urlLen*0.50):
      print("已爬取50%的網頁")
    if urlIndex == int(urlLen*0.75):
      print("已爬取75%的網頁")
    judgementDICT = judgementGrabber_guilty(i)
    judgementLIST.append(judgementDICT)
  for i in urlLIST_2:
    judgementDICT = judgementGrabber_notguilty(i)
    judgementLIST.append(judgementDICT)
  print("-------完成爬取連結內容-------")
  with open("judgement.json", "w", encoding = "utf-8") as f:
    json.dump(judgementLIST, f, ensure_ascii = False, indent = 4)  